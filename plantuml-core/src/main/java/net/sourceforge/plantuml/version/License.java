package net.sourceforge.plantuml.version;

import java.text.DateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import net.sourceforge.plantuml.OptionFlags;

public enum License {

	MIT;

	public static License getCurrent() {
		return MIT;
	}



	public List<String> getText1(LicenseInfo licenseInfo) {
		final List<String> text = new ArrayList<>();
		header1(text, licenseInfo);
		return text;
	}

	public List<String> getText2(LicenseInfo licenseInfo) {
		final List<String> text = new ArrayList<>();
		header2(text, licenseInfo, true);
		end3(licenseInfo, text);
		return text;
	}

	private void header1(final List<String> text, LicenseInfo licenseInfo) {

			text.add("+=======================================================================");
			text.add("| ");
			text.add("|      PlantUML : a free UML diagram generator");
			text.add("| ");
			text.add("+=======================================================================");
	}

	private void header2(final List<String> text, LicenseInfo licenseInfo, boolean withQrcode) {
		text.add(" ");
		text.add("(C) Copyright 2009-2024, Arnaud Roques");
		text.add(" ");
		text.add("Project Info:  https://plantuml.com");
		text.add(" ");

		if (licenseInfo.isValid() == false) {
			text.add("If you like this project or if you find it useful, you can support us at:");
			text.add(" ");
			text.add("https://plantuml.com/patreon (only 1$ per month!)");
			text.add("https://plantuml.com/liberapay (only 1\u20ac per month!)");
			text.add("https://plantuml.com/paypal");
				text.add("");
				text.add(" ");
		}
	}

	private void addMit(final LicenseInfo licenseInfo, final List<String> text) {
		text.add("Powered by CheerpJ, a Leaning Technologies Java tool.");
		text.add("This library is running using CheerpJ for PlantUML License provided by Leaning Technologies Limited.");
		text.add(" ");
		text.add(" ");
		text.add("PlantUML is free software; you can redistribute it and/or modify it");
		text.add("under the terms of the MIT License.");
		text.add(" ");
		text.add("See http://opensource.org/licenses/MIT");
		text.add(" ");
		text.add("Permission is hereby granted, free of charge, to any person obtaining");
		text.add("a copy of this software and associated documentation files (the \"Software\"),");
		text.add("to deal in the Software without restriction, including without limitation");
		text.add("the rights to use, copy, modify, merge, publish, distribute, sublicense,");
		text.add("and/or sell copies of the Software, and to permit persons to whom the");
		text.add("Software is furnished to do so, subject to the following conditions:");
		text.add(" ");
		text.add("The above copyright notice and this permission notice shall be included");
		text.add("in all copies or substantial portions of the Software.");
		text.add(" ");
		text.add("THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS");
		text.add("OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,");
		text.add("FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE");
		text.add("AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,");
		text.add("WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR");
		text.add("IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.");
		text.add(" ");
		addSupplementary(licenseInfo, text);
		text.add("the MIT License.");
		text.add(" ");
		text.add("The generated images can then be used without any reference to the MIT License.");
		text.add("It is not even necessary to stipulate that they have been generated with PlantUML,");
		text.add("although this will be appreciated by the PlantUML team.");
		text.add(" ");
		text.add("There is an exception : if the textual description in PlantUML language is also covered");
		text.add("by a license (like the MIT), then the generated images are logically covered");
		text.add("by the very same license.");
	}

	private void addSupplementary(final LicenseInfo licenseInfo, final List<String> text) {

		if (licenseInfo.isValid() == false) {
			text.add("PlantUML can occasionally display sponsored or advertising messages. Those");
			text.add("messages are usually generated on welcome or error images and never on");
			text.add("functional diagrams.");
			text.add("See https://plantuml.com/professional if you want to remove them");
			text.add(" ");
		}

		text.add("Images (whatever their format : PNG, SVG, EPS...) generated by running PlantUML");
		text.add("are owned by the author of their corresponding sources code (that is, their");
		text.add("textual description in PlantUML language). Those images are not covered by");
	}

	private void end3(final LicenseInfo licenseInfo, final List<String> text) {
			addMit(licenseInfo, text);
		text.add(" ");
		text.add("Icons provided by OpenIconic :  https://useiconic.com/open");
		text.add("Archimate sprites provided by Archi :  http://www.archimatetool.com");
		text.add("Stdlib AWS provided by https://github.com/milo-minderbinder/AWS-PlantUML");
		text.add("Stdlib Icons provided https://github.com/tupadr3/plantuml-icon-font-sprites");
		text.add("ASCIIMathML (c) Peter Jipsen http://www.chapman.edu/~jipsen");
		text.add("ASCIIMathML (c) David Lippman http://www.pierce.ctc.edu/dlippman");
		text.add("CafeUndZopfli ported by Eugene Klyuchnikov https://github.com/eustas/CafeUndZopfli");
		text.add("Brotli (c) by the Brotli Authors https://github.com/google/brotli");
		text.add("Themes (c) by Brett Schwarz https://github.com/bschwarz/puml-themes");
		text.add("Twemoji (c) by Twitter at https://twemoji.twitter.com/");
		text.add(" ");
	}


}
